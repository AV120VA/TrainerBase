"""create communities table and add community_id to posts

Revision ID: d263dfaced3a
Revises: 388901ae3ce3
Create Date: 2025-04-05 22:48:44.035116

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'd263dfaced3a'
down_revision = '388901ae3ce3'
branch_labels = None
depends_on = None



def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communities',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('community_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(
            'fk_posts_community_id',  # Add this constraint name
            'communities',
            ['community_id'],
            ['id']
        )

    if environment == "production":
        op.execute(f"ALTER TABLE communities SET SCHEMA {SCHEMA};")  # Fixed to alter communities table

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint('fk_posts_community_id', type_='foreignkey')  # Updated constraint name
        batch_op.drop_column('community_id')

    op.drop_table('communities')
    # ### end Alembic commands ###
